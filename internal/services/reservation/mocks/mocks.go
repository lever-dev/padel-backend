// Code generated by MockGen. DO NOT EDIT.
// Source: dependency.go
//
// Generated by this command:
//
//	mockgen -source=dependency.go -destination=./mocks/mocks.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entities "github.com/lever-dev/padel-backend/internal/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockReservationsRepository is a mock of ReservationsRepository interface.
type MockReservationsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockReservationsRepositoryMockRecorder
	isgomock struct{}
}

// MockReservationsRepositoryMockRecorder is the mock recorder for MockReservationsRepository.
type MockReservationsRepositoryMockRecorder struct {
	mock *MockReservationsRepository
}

// NewMockReservationsRepository creates a new mock instance.
func NewMockReservationsRepository(ctrl *gomock.Controller) *MockReservationsRepository {
	mock := &MockReservationsRepository{ctrl: ctrl}
	mock.recorder = &MockReservationsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReservationsRepository) EXPECT() *MockReservationsRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockReservationsRepository) Create(ctx context.Context, reservation *entities.Reservation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, reservation)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockReservationsRepositoryMockRecorder) Create(ctx, reservation any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockReservationsRepository)(nil).Create), ctx, reservation)
}
